{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45bd59ba.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export const firebaseInstance = firebase;\r\n\r\n  export const authService = firebase.auth();\r\n  export const dbService = firebase.firestore();\r\n  export const storageService = firebase.storage();","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true); \r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const { target: {name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value);\r\n        }\r\n        else if(name === \"password\"){\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }else{\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        }\r\n        catch(error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                    className=\"authInput\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    className=\"authInput\"\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"authInput authSubmit\"\r\n                    value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\": \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n}\r\nexport default AuthForm;","import React, { useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n  } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: {name}\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                    </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== \"\"){\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: {value}} = event;\r\n        setNewNweet(value);\r\n    };\r\n    return(\r\n      <div className=\"nweet\">\r\n       {\r\n           editing ? (\r\n            <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Edit your nweet\"\r\n                    value={newNweet}\r\n                    required \r\n                    onChange={onChange}\r\n                    />\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n            </form>\r\n            <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n                </button>\r\n           </>\r\n           ): ( \r\n           <><h4>{nweetObj.text}</h4>\r\n           {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n           {isOwner && (\r\n               <div class=\"nweet__actions\" >\r\n                <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n               </div>\r\n           )}\r\n        </>)\r\n       }\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4} from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {  \r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet ===\"\"){\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\"){\r\n            const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text:nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value }\r\n        } = event;\r\n        setNweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const {target: {files}\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if(Boolean(theFile)){\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onClearAttachmentClick = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input\r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n              opacity: 0,\r\n            }}\r\n        />\r\n\r\n        {attachment && (    \r\n            <div className=\"factoryForm__attachment\">\r\n                <img\r\n                    src={attachment}\r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                      }}\r\n                    />\r\n                <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>\r\n        )}\r\n    </form>\r\n    )\r\n};\r\nexport default NweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map((doc) => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj}/>\r\n            <div style={{marginTop: 30}}>\r\n                {nweets.map(nweet => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n                                                                                //Navigation Part(Home, Profile)\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>                                                                      \r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n              <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n                >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                    ? `${userObj.displayName}의 Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n            </Link>  \r\n        </li>\r\n    </ul>\r\n</nav>\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { authService, dbService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({refreshUser, userObj}) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) =>{\r\n    const{\r\n      target: {value},\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName){\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input \r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n          />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport {HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div\r\n                    style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                <Route exact path=\"/\">\r\n                    <Home userObj={userObj}/>\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                    <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                </Route>\r\n                </div>\r\n               ) : (\r\n                <>\r\n                    <Route exact path=\"/\">\r\n                    <Auth />\r\n                    </Route>\r\n                </>\r\n               )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react';\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {                    //Every time userupdate\n      if(user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {                                    //userupdate\n    const user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  }\n  return (\n    <>\n      {init ? (                                                  //Init(GetUserData) ?  Router: \"Initializing\"\n              <AppRouter\n                refreshUser={refreshUser}\n                isLoggedIn={Boolean(userObj)}\n                userObj={userObj}\n                />\n              ):(\n                \"Initializing...\"\n                )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}